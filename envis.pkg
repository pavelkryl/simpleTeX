\LoadPackage{stacks}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% environments %%%%%%%%%%%%%%%

%% tests whether given environment exists
\def\TestEnviExists#1{\IfSetVar{ENVI::#1Exists}{}{\FatalErrMsg{Environment #1 does not exist, declare it.}}}%

%% sets environment's parameters, params:
% 1 - envi's name
% 2 - param's name
% 3 - param's value
\long\def\SetEnviParam#1[#2]=#3{%
	\TestEnviExists{#1}%
	\AppendToPList{ENVI::#1}{#2}%
	\SetVar{ENVI::#1#2}{#3}
}%

%% sets environment's parameters if it exists, otherwise the parameter is
% ignored, params:
% 1 - envi's name
% 2 - param's name
% 3 - param's value
\long\def\softSetEnviParam#1[#2]=#3{%
	\IfSetVar{ENVI::#1Exists}{%
		\AppendToPList{ENVI::#1}{#2}%
		\SetVar{ENVI::#1#2}{#3}
	}{}%
}%

%% copies environment parameter into a new environment under the same name
% 1 - original envi name
% 2 - name of the parameter
% 3 - new envi name
\def\CopyEnviParam#1[#2]->#3{{%
	\TestEnviExists{#1}\TestEnviExists{#3}%
	%\NewLine appending #2 to ENVI::#3\NewLine
	% TODO: create param in PList if necessary
	%\AppendToPList{ENVI::#3}{#2}%
	\CopyVar {ENVI::#1#2}->{ENVI::#3#2}}}%

%% return's environemnt's parameter value contained, params:
% 1 - envi's name
% 2 - param's name
\def\GetEnviParam#1[#2]{%
	\TestEnviExists{#1}%
	\TestVarExists{ENVI::#1#2}%
	\GetVar{ENVI::#1#2}}%

%% prefixes envi param by given text, params:
% 1 - envi name
% 2 - envi param to be prefixed
% 3 - prefix self
\long\def\PrefixEnviParam#1[#2]<#3{%
	\TestEnviExists{#1}%
	\PrefixVar{ENVI::#1#2}{#3}}%

%% postfixes envi param by given text, params:
% 1 - envi name
% 2 - envi param to be prefixed
% 3 - postfix self
\long\def\PostfixEnviParam#1[#2]<#3{%
	\TestEnviExists{#1}%
	\PostfixVar{ENVI::#1#2}{#3}}%

%% returns current envi name
\def\GetCurrEnviName{\GetVar{ENVI::CurrEnvi}}%

%% sets value of a parameter of current envi, params:
% 1 - param name
% 2 - param value
\def\SetCurrEnviParam#1#2{\SetVar{ENVI::\GetCurrEnviName#1}{#2}}%

\def\GetEnviParamInToks#1#2[#3]{%
	\TestEnviExists{#2}%
	\GetVarInToks{#1}{ENVI::#2#3}}%

%% returns value of a parameter from the current environment, params:
% 1 - param name
\def\GetCurrEnviParam[#1]{%
	\GetEnviParam\GetCurrEnviName[#1]}%}
%

%% creates a new environment, params:
% 1 - name of the environment
% 2 - preactions: performed locally
% 3 - postactions: performed locally
\long\def\CreateNewEnvironment#1#2#3{%
	\SetVar{ENVI::#1Exists}{}%
	\DeclarePList{ENVI::#1}%
	\SetEnviParam{#1}[PreActions]={#2}%
	\SetEnviParam{#1}[PostActions]={#3}%
	\SetEnviParam{#1}[ExtraTopSpace]={0pt}%
	\SetEnviParam{#1}[ExtraBottomSpace]={0pt}%
	% case of RadkovyRejstrik
	\SetEnviParam{#1}[ExtraTopLines]={1}%
	\SetEnviParam{#1}[ExtraBottomLines]={1}%
	% whether break is allowed - by default it is
	\SetEnviParam{#1}[BreakAllowed]={YES}%
}%

%% creates a new environment by deriving its properties from an existing one, params:
% 1 - name of the environment from which to derive
% 2 - name of the new environment
\def\DeriveNewEnvironment#1->#2{%
	\TestEnviExists{#1}%
	\SetVar{ENVI::#2Exists}{}%
	\DeclarePList{ENVI::#2}%
	\def\SetDstEnviParam##1{\CopyEnviParam {#1}[##1]->{#2}}%
	\ClonePList ENVI::#1-\SetDstEnviParam->{ENVI::#2}%
	%\ForEachPListElem{ENVI::#1}\SetDstEnviParam
}%

%% begins environment: performs pre-actions
\def\Begin#1{%
	\TestEnviExists{#1}%
	\par %?
	\bgroup\lSetVar{ENVI::CurrEnvi}{#1}%
	\IfLit '\GetDocParam[RadkovyRejstrik]'='YES'%
		{\IfLit '\GetCurrEnviParam[ExtraTopLines]'='0'{}{\softskiplines{\GetCurrEnviParam[ExtraTopLines]}}}%
		{\ifdim\GetCurrEnviParam[ExtraTopSpace]=0cm\else\vskip\GetCurrEnviParam[ExtraTopSpace]\fi}
	\GetEnviParam{#1}[PreActions]}%

%% end environment: performs post-actions
\def\End#1{%
	\TestEnviExists{#1}%
	\GetEnviParam{#1}[PostActions]%
	\par
	\IfLit '\GetCurrEnviParam[BreakAllowed]'='NO'{\nobreak}{}%
	\IfLit '\GetDocParam[RadkovyRejstrik]'='YES'%
		{\IfLit '\GetCurrEnviParam[ExtraBottomLines]'='0'{}{\softskiplines{\GetCurrEnviParam[ExtraBottomLines]}}}%
		{\ifdim\GetCurrEnviParam[ExtraBottomSpace]=0cm\else\vskip\GetCurrEnviParam[ExtraBottomSpace]\fi}
	\egroup
}%

\LoadFile{envi_settings.tex}
